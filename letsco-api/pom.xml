<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright (c) 2020, RTE (https://www.rte-france.com)                     -->
<!-- Copyright (c) 2020 RTE international (https://www.rte-international.com) -->
<!-- See AUTHORS.txt                                                          -->
<!-- This Source Code Form is subject to the terms of the Mozilla Public      -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this      -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/.                 -->
<!-- SPDX-License-Identifier: MPL-2.0                                         -->
<!-- This file is part of the Letâ€™s Coordinate project.                       -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.lfenergy.letscoordinate</groupId>
		<artifactId>letsco-core</artifactId>
		<version>1.2.0.RELEASE</version>
	</parent>

	<artifactId>letsco-api</artifactId>
	<name>letsco-api</name>
	<description>The backend module for the letscoordinate opensource application</description>

	<licenses>
		<license>
			<name>MPL-2.0</name>
			<url>http://mozilla.org/MPL/2.0/</url>
		</license>
	</licenses>

	<properties>
		<java.version>11</java.version>
		<mariadb.version>2.4.4</mariadb.version>
		<keycloak.version>11.0.3</keycloak.version>
	</properties>

	<dependencies>
		<!-- Letsco-common -->
		<dependency>
			<groupId>org.lfenergy.letscoordinate</groupId>
			<artifactId>letsco-common</artifactId>
			<version>${parent.version}</version>
		</dependency>

		<!-- Spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<!-- Liquibase -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<!-- MariaDB -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb.version}</version>
		</dependency>

		<!-- Kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- Swagger 2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- Extra -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- Excel -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.15</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.15</version>
		</dependency>

		<!-- File upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- OpFab Cards Client -->
		<dependency>
			<groupId>org.lfenergy.operatorfabric</groupId>
			<artifactId>cards-client</artifactId>
			<version>SNAPSHOT</version>
		</dependency>

		<!-- Keycloak -->
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-admin-client</artifactId>
			<version>${keycloak.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<!--<destFile>${sonar.coverage.jacoco.xmlReportPaths}</destFile>-->
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!--<dataFile>${sonar.coverage.jacoco.xmlReportPaths}</dataFile>
							<outputDirectory>${jacoco.outputDir}</outputDirectory>-->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>